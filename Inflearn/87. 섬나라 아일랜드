#include <iostream>
#include <queue>

using namespace std;

int map[20][20];
int main() {

	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);

	int n, cnt = 0;
	cin >> n;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> map[i][j];
		}
	}

	int dx[8] = { 0,0,1,-1,1,-1,1,-1};
	int dy[8] = { 1,-1,0,0,1,-1,-1,1};

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (map[i][j] == 1) {
				queue <pair <int, int>> q;
				q.push({ i, j });
				map[i][j] = 0;
				while (!q.empty()) {
					int x = q.front().first;
					int y = q.front().second;
					q.pop();
					for (int k = 0; k < 8; k++) {
						int xx = x + dx[k];
						int yy = y + dy[k];
						if (xx >= 0 && xx < n && yy >= 0 && yy < n) {
							if (map[xx][yy] == 1) {
								q.push({ xx, yy });
								map[xx][yy] = 0;
							}
						}
					}
				}
				cnt++;
			}
		}
	}

	cout << cnt;

	return 0;
}
