#include <iostream>

using namespace std;

int arr[10];
int y[4];
int max = 0, min = 2147000000;

void dfs(int L, int sum, int n) {

	if (L == n) {
		if (max < sum) max = sum;
		if (min > sum) min = sum;
		return;
	}
	
	for (int i = 0; i < 4; i++) {
		if (y[i] != 0) {
			y[i]--;
			if (i == 0) {
				dfs(L + 1, sum + arr[L], n);
			}
			else if (i == 1) {
				dfs(L + 1, sum - arr[L], n);
			}
			else if (i == 2) {
				dfs(L + 1, sum * arr[L], n);
			}
			else {
				dfs(L + 1, sum / arr[L], n);
			}
			y[i]++;
		}
	}
}

int main() {

	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);

	int n;
	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}

	for (int i = 0; i < 4; i++) {
		cin>> y[i];
	}

	dfs(1, arr[0], n);

	cout << max << "\n" << min;

	return 0;
}
